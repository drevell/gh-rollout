# TODO:
#  - caching build steps; setting up gcloud is slow
#  - can this work without the service account having actAs permission on the default compute service account?

name: Build and Deploy to Dev

on:
  workflow_dispatch:
  push:
    branches: [ 'main' ] # TODO think about the real conditions

jobs:
  call-build:
    uses: './.github/workflows/reusable-build.yml'
    permissions:
      contents: 'read'
      id-token: 'write'
    with:
      project_id: '${{ vars.project_id }}'
      gar_region: '${{ vars.gar_region }}'
      gar_repo: '${{ vars.gar_repo }}'
      env: 'dev'
    secrets: inherit
  
  # TODO factor out a build-only job that doesn't deploy?
  # build-deploy:
  #   name: 'Build and deploy to dev'
  #   environment: dev # Get secrets and variables of this env
  #   permissions:
  #     contents: 'read'
  #     id-token: 'write'
  #   runs-on: 'ubuntu-latest'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Google Auth
  #       id: auth
  #       uses: 'google-github-actions/auth@v0'
  #       with:
  #         token_format: 'access_token'
  #         workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
  #         service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

  #     # Authenticate Docker to Google Cloud Artifact Registry
  #     # TODO: make sure this is needed
  #     - name: Docker Auth
  #       id: docker-auth
  #       uses: 'docker/login-action@v2'
  #       with:
  #         username: 'oauth2accesstoken'
  #         password: '${{ steps.auth.outputs.access_token }}'
  #         registry: '${{ vars.gar_region }}-docker.pkg.dev'

  #     # TODO have a separate registry for CI images that's only writeable by CI. Then we can tag images with the SHA rather than the $run_number.

  #     - name: 'Set up Cloud SDK'
  #       uses: 'google-github-actions/setup-gcloud@v1'
  #       with:
  #         install_components: 'skaffold'
  #     - name: Skaffold build
  #       run: |-
  #         skaffold build -t ci-${{ github.run_id }}-${{ github.run_number }} --default-repo=${{ vars.gar_region }}-docker.pkg.dev/${{ vars.project_id }}/${{ vars.gar_repo }} --platform=linux/amd64,linux/arm64 --cache-artifacts=false

  #     - name: Deploy to Cloud Run
  #       id: deploy
  #       uses: google-github-actions/deploy-cloudrun@v0
  #       with:
  #         service: ${{ vars.cloudrun_service }}
  #         region: ${{ vars.cloudrun_region }}
  #         image: ${{ vars.gar_region }}-docker.pkg.dev/${{ vars.project_id }}/${{ vars.gar_repo }}/${{ vars.docker_image }}:ci-${{ github.run_id }}-${{ github.run_number }}

  #     # # If required, use the Cloud Run url output in later steps
  #     # - name: Show Output
  #     #   run: echo ${{ steps.deploy.outputs.url }}
