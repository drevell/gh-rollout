on:
  workflow_call:
    secrets:
      WIF_PROVIDER:
        # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
        required: true
      WIF_SERVICE_ACCOUNT:
        # e.g. - my-service-account@my-project.iam.gserviceaccount.com
        required: true
    inputs:
      env:
        required: true
        type: string
        description: "the name of the GitHub environment to pull variables and secretes from; e.g. dev"
      # project_id:
      #   required: true
      #   type: string
      #   description: "the project ID of the project containing the Artifact Registry; e.g. my-project-123"
      # gar_region:
      #   required: true
      #   type: string
      #   description: "the region of the artifact registry; e.g. us-west1"
      # gar_repo:
      #   required: true
      #   type: string
      #   description: "the name of the Artifact Registry repository; e.g. my-ci-artifacts"
      # cloudrun_service:
      #   required: true
      #   type: string
      #   description: "the name of the Cloud Run service to deploy to; e.g. my-cloudrun-service"
      # cloudrun_region:
      #   required: true
      #   type: string
      #   description: "the region containing the Cloud Run service to deploy to; e.g. us-central1"
      # docker_image:
      #   required: true
      #   type: string
      #   description: "the name of the docker image to deploy, not including any tags; e.g. my-service-image"


jobs:
  build-and-upload:
    name: Build and upload image
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    environment: '${{ vars.env }}'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
        service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

    - name: Show Output
      run: 'echo abcdef gar_region is ${{ vars.gar_region }}'

    # Authenticate Docker to Google Cloud Artifact Registry
    # TODO: make sure this is needed
    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v2'
      with:
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'
        registry: '${{ vars.gar_region }}-docker.pkg.dev'

    # TODO have a separate registry for CI images that's only writeable by CI. Then we can tag images with the SHA rather than the $run_number.

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        install_components: 'skaffold'
    - name: Skaffold build
      run: |-
        skaffold build -t ci-${{ github.run_id }}-${{ github.run_number }} --default-repo=${{ vars.gar_region }}-docker.pkg.dev/${{ vars.project_id }}/${{ vars.gar_repo }} --platform=linux/amd64,linux/arm64 --cache-artifacts=false

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ vars.cloudrun_service }}
        region: ${{ vars.cloudrun_region }}
        image: ${{ vars.gar_region }}-docker.pkg.dev/${{ vars.project_id }}/${{ vars.gar_repo }}/${{ vars.docker_image }}:ci-${{ github.run_id }}-${{ github.run_number }}
