# Builds a container image using skaffold and uploads it to Artifact Registry, tagged with the
# current SHA.
#
# Requires:
#  - Caller must declare the id-token write permission, for example:
#       permissions:
#         id-token: write
#  - There must be these variables configured at the org, repo, or environment level:
#    - gar_region: the region containing the Artifact Registry, e.g. us-west1
#    - gar_repo: the name of the repo within Artifact Registry, e.g. my-container-images
#    - admin_project_id: the project ID of the project containing Artifact Registry

# TODO make this manually runnable. Do we have to duplicate the inputs and secrets between workflow_call and workflow_dispatch?

on:
  workflow_call:
    secrets:
      WIF_PROVIDER:
        # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
        required: true
      WIF_SERVICE_ACCOUNT:
        # e.g. - my-service-account@my-project.iam.gserviceaccount.com
        required: true


jobs:
  build-and-upload:
    name: Build and upload container image
    # permissions:
    #   contents: 'read'
    #   id-token: 'write'
    runs-on: ubuntu-latest
    # We only want to build each image once. Later builds will exit early (see ALREADY_BUILT below).
    concurrency: 'building-at-${{ github.sha }}'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
        service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        install_components: 'skaffold'

    # We made this workflow idempotent so it can be rerun cheaply at the same SHA. This allows us
    # to just re-run the build if we're not sure the image already exists when it's time for the
    # staging deployment.
    - name: Check whether image already exists
      id: already-built
      run: |-
        if gcloud artifacts docker tags list ${{ vars.gar_region }}-docker.pkg.dev/${{ vars.admin_project_id }}/${{ vars.gar_repo }}/${{ vars.docker_image}} --filter=${{ github.sha }} --limit 1 --format='table("IT_ALREADY_EXISTS")' | grep IT_ALREADY_EXISTS
        then echo "ALREADY_BUILT=true" >> $GITHUB_OUTPUT
        fi

    # Authenticate Docker to Google Cloud Artifact Registry
    - name: Docker Auth
      if: '!steps.already-built.outputs.ALREADY_BUILT'
      id: docker-auth
      uses: 'docker/login-action@v2'
      with:
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'
        registry: '${{ vars.gar_region }}-docker.pkg.dev'

    - name: Skaffold build
      if: '!steps.already-built.outputs.ALREADY_BUILT'
      run: |-
        skaffold build -t ${{ github.sha }} --default-repo=${{ vars.gar_region }}-docker.pkg.dev/${{ vars.admin_project_id }}/${{ vars.gar_repo }} --platform=linux/amd64,linux/arm64 --cache-artifacts=false

 